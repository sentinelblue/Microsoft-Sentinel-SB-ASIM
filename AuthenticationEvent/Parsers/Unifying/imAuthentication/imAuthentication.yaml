Parser:
  Title: Authentication ASIM filtering parser
  Version: '2.0.0'
  Type: Unifying
  LastUpdated: April 10th, 2024
  Source: Sentinel Blue
Product:
  Name: Source agnostic
Normalization:
  Schema: Authentication
  Version: '0.1.3'
References:
- Title: ASIM Authentication Schema
  Link: https://aka.ms/ASimAuthenticationDoc
- Title: ASIM
  Link: https:/aka.ms/AboutASIM
Description: |
  This ASIM parser supports filtering and normalizing Authentication logs from all supported sources to the ASIM Authentication normalized schema.
ParserName: imAuthentication
Etag: a39cd8e5-56e9-4710-85b4-0785f2d985ab
Dependencies:
  - Type: Parser
    Name: vimAuthenticationEmpty
    Version: 1.1.0
    Source: Sentinel Blue
  - Type: Parser
    Name: vimAuthenticationAADManagedIdentitySignInLogs
    Version: 1.0.0
    Source: Sentinel Blue
  - Type: Parser
    Name: vimAuthenticationAADNonInteractiveUserSignInLogs
    Version: 2.0.0
    Source: Sentinel Blue
  - Type: Parser
    Name: vimAuthenticationAADServicePrincipalSignInLogs
    Version: 1.0.0
    Source: Sentinel Blue
  - Type: Parser
    Name: vimAuthenticationSigninLogs
    Version: 2.0.0
    Source: Sentinel Blue
ParserParams:
  - Name: starttime
    Type: datetime
    Default: datetime(null)
  - Name: endtime
    Type: datetime
    Default: datetime(null)
  - Name: username_has_any
    Type: dynamic
    Default: dynamic([])
  - Name: targetappname_has_any
    Type: dynamic
    Default: dynamic([])
  - Name: srcipaddr_has_any_prefix
    Type: dynamic
    Default: dynamic([])
  - Name: srchostname_has_any
    Type: dynamic
    Default: dynamic([])
  - Name: eventtype_in
    Type: dynamic
    Default: dynamic([])
  - Name: eventresultdetails_in
    Type: dynamic
    Default: dynamic([])
  - Name: eventresult
    Type: string
    Default: '*'
  - Name: user_id
    Type: dynamic
    Default: dynamic([])
  - Name: user_type
    Type: dynamic
    Default: dynamic([])
  - Name: dvc_id
    Type: dynamic
    Default: dynamic([])
  - Name: dvc_type
    Type: dynamic
    Default: dynamic([])
  - Name: dvc_os
    Type: dynamic
    Default: dynamic([])
  - Name: ip
    Type: dynamic
    Default: dynamic([])
  - Name: useragent
    Type: dynamic
    Default: dynamic([])
  - Name: eventseverity
    Type: dynamic
    Default: dynamic([])
  - Name: eventproduct
    Type: dynamic
    Default: dynamic([])
  - Name: pivot_lookback
    Type: string
    Default: '30'
  - Name: disabled
    Type: bool
    Default: false
ParserQuery: |
  let AuthenticationParser=(
      starttime:datetime                  = datetime(null)
      , endtime:datetime                  = datetime(null)
      , username_has_any:dynamic          = dynamic([])
      , targetappname_has_any:dynamic     = dynamic([])
      , srcipaddr_has_any_prefix:dynamic  = dynamic([])
      , srchostname_has_any:dynamic       = dynamic([])
      , eventtype_in:dynamic              = dynamic([])
      , eventresultdetails_in:dynamic     = dynamic([])
      , eventresult:string                = "*"
      , user_type:dynamic                 = dynamic([])
      , user_id:dynamic                   = dynamic([])
      , dvc_id:dynamic                    = dynamic([])
      , dvc_os:dynamic                    = dynamic([])
      , dvc_type:dynamic                  = dynamic([])
      , ip:dynamic                        = dynamic([])
      , useragent:dynamic                 = dynamic([])
      , eventseverity:dynamic             = dynamic([])
      , eventproduct:dynamic              = dynamic([])
      , pivot_lookback:string             = "30"
      , disabled:bool                     = false
  ) {
      union isfuzzy=true
      vimAuthenticationEmpty
          , vimAuthenticationAADManagedIdentitySignInLogs   (starttime, endtime, username_has_any, targetappname_has_any, srcipaddr_has_any_prefix, srchostname_has_any, eventtype_in, eventresultdetails_in, eventresult, user_type, user_id, dvc_id, dvc_os, dvc_type, ip, useragent, eventseverity, eventproduct, pivot_lookback, disabled)
          , vimAuthenticationAADNonInteractiveUserSignInLogs(starttime, endtime, username_has_any, targetappname_has_any, srcipaddr_has_any_prefix, srchostname_has_any, eventtype_in, eventresultdetails_in, eventresult, user_type, user_id, dvc_id, dvc_os, dvc_type, ip, useragent, eventseverity, eventproduct, pivot_lookback, disabled)
          , vimAuthenticationAADServicePrincipalSignInLogs  (starttime, endtime, username_has_any, targetappname_has_any, srcipaddr_has_any_prefix, srchostname_has_any, eventtype_in, eventresultdetails_in, eventresult, user_type, user_id, dvc_id, dvc_os, dvc_type, ip, useragent, eventseverity, eventproduct, pivot_lookback, disabled)
          , vimAuthenticationSigninLogs                     (starttime, endtime, username_has_any, targetappname_has_any, srcipaddr_has_any_prefix, srchostname_has_any, eventtype_in, eventresultdetails_in, eventresult, user_type, user_id, dvc_id, dvc_os, dvc_type, ip, useragent, eventseverity, eventproduct, pivot_lookback, disabled)
      | project-reorder 
          TimeGenerated
          , User*
          , EventProduct
          , EventType
          , EventSubType
          , EventSeverity
          , EventResult
          , EventResultDetails
          , EventMessage
          , Pivots
          , LogonTarget
          , LogonMethod
          , LogonProtocol
          , SrcIpAddr
          , SrcGeoCountry
          , SrcGeoRegion
          , SrcGeoCity
          , Dvc
          , DvcOs
          , SrcDeviceType
          , DvcId
          , DvcTrustType
          , DvcCompliant
          , DvcManaged
          , DvcZone
          , HttpUserAgent
          , ActingAppName
          , ActingAppId
          , Event*
          , Target*
          , Src*
          , Dvc*
          , *
      | order by TimeGenerated
    };
  AuthenticationParser(starttime, endtime, username_has_any, targetappname_has_any, srcipaddr_has_any_prefix, srchostname_has_any, eventtype_in, eventresultdetails_in, eventresult, user_type, user_id, dvc_id, dvc_os, dvc_type, ip, useragent, eventseverity, eventproduct, pivot_lookback, disabled)